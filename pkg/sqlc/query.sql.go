// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createRequest = `-- name: CreateRequest :exec
INSERT INTO requests (id, method, content, source_ip, timestamp, request_path)
VALUES ($1, $2, $3,
        $4, $5, $6)
`

type CreateRequestParams struct {
	ID          uuid.UUID          `json:"id"`
	Method      string             `json:"method"`
	Content     []byte             `json:"content"`
	SourceIp    string             `json:"sourceIp"`
	Timestamp   pgtype.Timestamptz `json:"timestamp"`
	RequestPath string             `json:"requestPath"`
}

func (q *Queries) CreateRequest(ctx context.Context, arg CreateRequestParams) error {
	_, err := q.db.Exec(ctx, createRequest,
		arg.ID,
		arg.Method,
		arg.Content,
		arg.SourceIp,
		arg.Timestamp,
		arg.RequestPath,
	)
	return err
}

type CreateRequestHeadersParams struct {
	RequestID uuid.UUID   `json:"requestId"`
	Name      string      `json:"name"`
	Value     pgtype.Text `json:"value"`
}

type CreateRequestQueryParametersParams struct {
	RequestID uuid.UUID   `json:"requestId"`
	Name      string      `json:"name"`
	Value     pgtype.Text `json:"value"`
}

const createResponse = `-- name: CreateResponse :exec
insert into responses (requestid, response_content, response_code, timestamp)
values ($1, $2, $3, $4)
`

type CreateResponseParams struct {
	Requestid       uuid.UUID          `json:"requestid"`
	ResponseContent []byte             `json:"responseContent"`
	ResponseCode    int32              `json:"responseCode"`
	Timestamp       pgtype.Timestamptz `json:"timestamp"`
}

func (q *Queries) CreateResponse(ctx context.Context, arg CreateResponseParams) error {
	_, err := q.db.Exec(ctx, createResponse,
		arg.Requestid,
		arg.ResponseContent,
		arg.ResponseCode,
		arg.Timestamp,
	)
	return err
}

type CreateResponseHeadersParams struct {
	Requestid uuid.UUID   `json:"requestid"`
	Name      string      `json:"name"`
	Value     pgtype.Text `json:"value"`
}
